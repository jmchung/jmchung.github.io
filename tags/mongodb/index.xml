<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on </title>
    <link>https://jmchung.github.io/tags/mongodb/</link>
    <description>Recent content in Mongodb on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 30 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jmchung.github.io/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Map-Reduce with MongoDB and Morphia</title>
      <link>https://jmchung.github.io/post/map-reduce-with-mongodb-and-morphia/</link>
      <pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jmchung.github.io/post/map-reduce-with-mongodb-and-morphia/</guid>
      <description>Just a note to record the usage of Map-Reduce with MongoDB and Morphia. Firstly, add the Morphia dependency.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mongodb&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mongo-java-driver&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.11.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mongodb.morphia&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;morphia&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.105&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;  The syntax of MapReduceCommand in Morphia as shown in MapReduceCommand.java:
public MapReduceCommand( DBCollection inputCollection, String map, String reduce, String outputCollection, OutputType type, DBObject query) { // Compiled Code }  Here we want to group the sales amount (i.e., subtotal) of each county and exclude the null-subtotal from collection.</description>
    </item>
    
    <item>
      <title>Using the MongoDB Aggregation Framework via MongoDB Asynchronous Java Driver</title>
      <link>https://jmchung.github.io/post/using-the-mongodb-aggregation-framework-via-mongodb-asynchronous-java-driver/</link>
      <pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jmchung.github.io/post/using-the-mongodb-aggregation-framework-via-mongodb-asynchronous-java-driver/</guid>
      <description>Introduction I often use Morphia in projects for mapping Java objects to/from MongoDB and it&amp;rsquo;s Query API instead of building the complex DBObject query. However, the current version (v. 0.105) without aggregate command support. Fortunately, the MongoDB Asynchronous Java Driver provides the aggregate builder to construct complex pipelines of operators in fluent way. As usual, the following paragraphs will express some basic usages of mongodb-async-driver in aggregation pipeline framework through an example.</description>
    </item>
    
    <item>
      <title>Using MongoDB with Morphia</title>
      <link>https://jmchung.github.io/post/using-mongodb-with-morphia/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jmchung.github.io/post/using-mongodb-with-morphia/</guid>
      <description>Morphia - The JVM Object Document Mapper for MongoDB.
 MongoDB is an extremely useful document-based database in NoSQL field. There are various drivers and client libraries in MongoDB Ecosystem and detailed manual to facilitate the developers to get into it shortly. In the beginning, we use MongoDB Java driver to manipulate CRUD operations on databases. Everything is running well but lots of BasicDBObject cause the code lack of readability and fluency.</description>
    </item>
    
    <item>
      <title>Converting ISODate from MongoDB</title>
      <link>https://jmchung.github.io/post/converting-isodate-from-mongodb/</link>
      <pubDate>Wed, 06 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jmchung.github.io/post/converting-isodate-from-mongodb/</guid>
      <description>Iâ€™m confused about the insertion operation with Date object via mongo-java-driver that always short of 8 hours where my place of residence is Taiwan (GMT+8). According to the enclosed references, we can observe that the incoming Date object will be set to ISO_8601_DATE_FORMAT as shown in the following code snippet.
if (o instanceof Date) { Date d = (Date) o; SimpleDateFormat format = new SimpleDateFormat(ISO_8601_DATE_FORMAT); serialize(new BasicDBObject(&amp;quot;$date&amp;quot;, format.format(d)), buf); return; }  An example next demonstrates that the given Date will plus 8 hours in the GMT+8 time zone.</description>
    </item>
    
  </channel>
</rss>