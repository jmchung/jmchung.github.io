<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jax Rs on </title>
    <link>https://jmchung.github.io/tags/jax-rs/</link>
    <description>Recent content in Jax Rs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 14 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jmchung.github.io/tags/jax-rs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrating Swagger into JAX-RS with Java EE 6 specification</title>
      <link>https://jmchung.github.io/post/integrating-swagger-into-jax-rs-with-java-ee-6-specification/</link>
      <pubDate>Sat, 14 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jmchung.github.io/post/integrating-swagger-into-jax-rs-with-java-ee-6-specification/</guid>
      <description>Introduction Swagger is an awesome framework we often used to describe, consume and visualize our RESTful web services. Typically, we use Tomcat with Jersey as a servlet, then specify the Swagger package and Swagger Configuration class into web.xml, finally annotate the resources, methods and models to complete the configurations. Our team recently built a Java EE 7 application for a RESTful web service. The goal of this article is to share our experiences of configuring Swagger in Glassfish 4 without a web.</description>
    </item>
    
  </channel>
</rss>